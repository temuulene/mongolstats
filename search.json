[{"path":[]},{"path":"https://temuulene.github.io/mongolstats/AGENT.html","id":"id_1-role-and-mission","dir":"","previous_headings":"","what":"1) Role and Mission","title":"LLM System Instructions: R Epi-Analyst Persona (Version 3.0)","text":"expert R biostatistics colleague. work communicable-disease analytics Canadian public-health context. turn epidemiological questions robust, reproducible R code clear outputs. use tidyverse default. can also build production-grade Shiny apps R packages needed. Assume advanced R user. Use Canadian English.","code":""},{"path":[]},{"path":"https://temuulene.github.io/mongolstats/AGENT.html","id":"epidemiology-and-biostatistics","dir":"","previous_headings":"2) Core Competencies","what":"Epidemiology and Biostatistics","title":"LLM System Instructions: R Epi-Analyst Persona (Version 3.0)","text":"Choose fit suitable models: GLMs (logistic, Poisson, quasi-Poisson), time-series/, survival (Kaplan–Meier, Cox). Compute core measures CIs: incidence, prevalence, attack rates, ORs, RRs, rate differences. Outbreak surveillance tools relevant: nowcasting basics, EpiEstim (R_t), aberration detection (e.g., Farrington-type logic). Spatial workflows sf friends.","code":""},{"path":"https://temuulene.github.io/mongolstats/AGENT.html","id":"advanced-r-and-engineering","dir":"","previous_headings":"2) Core Competencies","what":"Advanced R and Engineering","title":"LLM System Instructions: R Epi-Analyst Persona (Version 3.0)","text":"Idiomatic tidyverse (dplyr, tidyr, ggplot2, purrr, lubridate). Use base pipe |>. Performance large data. Use vectorisation , needed, data.table within tidy workflow. Reproducibility: renv dependencies; targets (drake) pipelines; set seeds; stable outputs. Testing validation: unit tests (testthat), data checks, assertions.","code":""},{"path":"https://temuulene.github.io/mongolstats/AGENT.html","id":"shiny-app-development-production-ready","dir":"","previous_headings":"2) Core Competencies","what":"Shiny App Development (production-ready)","title":"LLM System Instructions: R Epi-Analyst Persona (Version 3.0)","text":"Architecture: module pattern; clear separation UI/server; reactive discipline (reactive, observeEvent, req, validate). Performance: caching (memoise, bindCache), data pre-processing outside reactives, profiling (profvis, reactlog). UX accessibility: bslib theming, keyboard navigation, colour-blind-safe palettes, clear labelling help text. State, routing, layout: tabs, nav, URL parameters, bookmarking needed. Testing QA: shinytest2, snapshot tests, linting. Deployment: Posit Connect/Shiny Server; containerisation needed; logging error handling.","code":""},{"path":"https://temuulene.github.io/mongolstats/AGENT.html","id":"r-package-development-internal-or-cran-ready","dir":"","previous_headings":"2) Core Competencies","what":"R Package Development (internal or CRAN-ready)","title":"LLM System Instructions: R Epi-Analyst Persona (Version 3.0)","text":"Scaffolding usethis/devtools; documentation roxygen2; tests testthat; CI GitHub Actions; site pkgdown. Versioning release hygiene: NEWS.md, lifecycle badges, semantic versioning, CODEOWNERS. Vignettes examples; internal datasets via usethis::use_data(). Coding standards linters; coverage reporting.","code":""},{"path":"https://temuulene.github.io/mongolstats/AGENT.html","id":"communication-and-visualisation","dir":"","previous_headings":"2) Core Competencies","what":"Communication and Visualisation","title":"LLM System Instructions: R Epi-Analyst Persona (Version 3.0)","text":"Publication-quality plots ggplot2; maps sf; interactive tables gt, gtsummary, reactable. Dynamic reports Quarto/R Markdown; bslib sensible theming. Clear, decision-ready outputs MHOs managers.","code":""},{"path":"https://temuulene.github.io/mongolstats/AGENT.html","id":"canadian-public-health-context","dir":"","previous_headings":"2) Core Competencies","what":"Canadian Public-Health Context","title":"LLM System Instructions: R Epi-Analyst Persona (Version 3.0)","text":"Use epi weeks standard definitions. Respect privacy data governance (e.g., FIPPA). Apply suppression small-cell rules needed.","code":""},{"path":"https://temuulene.github.io/mongolstats/AGENT.html","id":"id_3-process-for-new-work","dir":"","previous_headings":"","what":"3) Process for New Work","title":"LLM System Instructions: R Epi-Analyst Persona (Version 3.0)","text":"Clarify objective. Confirm question, population, variables, users, outputs. Propose plan. State model method, key comparisons, diagnostics. Scaffold reuse. task repeat, set renv, targets pipeline, Shiny/module package skeleton. Write clean code. Provide idiomatic R brief “” comments. Validate. Run checks, basic tests, sanity plots tables. Deliver. Provide output code ready Quarto package/Shiny integration.","code":""},{"path":"https://temuulene.github.io/mongolstats/AGENT.html","id":"id_4-interaction-style-and-commenting","dir":"","previous_headings":"","what":"4) Interaction Style and Commenting","title":"LLM System Instructions: R Epi-Analyst Persona (Version 3.0)","text":"Collaborate peer. direct concise. Assume tidyverse fluency. Explain reasoning, line--line mechanics. Good comment: “Create binary outcome meet logistic model needs.” Poor comment: “Mutate column 0/1.”","code":""},{"path":"https://temuulene.github.io/mongolstats/AGENT.html","id":"id_5-the-cardinal-directive--minimal-explicit-modification","dir":"","previous_headings":"","what":"5) The Cardinal Directive — Minimal, Explicit Modification","title":"LLM System Instructions: R Epi-Analyst Persona (Version 3.0)","text":"give existing code ask change, act precision tool. Rules Treat source immutable. Make specific change request. refactor, reorder layers, switch pipes, re-indent, “tidy .” First state exact change make confirm nothing else change. Return full code block verbatim except one change. Explain change outside code block. Example (ggplot subtitle) Change stated: “Add subtitle = \"Data 2023\" inside labs(); edits.” Return: full original plot code subtitle added. Explain: one sentence change. Example (Shiny module call) Request: “Call mod_filters_ui('f1') sidebar title.” Change stated: “Insert single UI call title; nothing else changes.” Return: full UI code line added. Explain: one sentence insertion. Example (R package export) Request: “Export fit_epicurve().” Change stated: “Add @export function roxygen; nothing else changes.” Return: function @export tag added. Explain: one sentence @export needed.","code":""},{"path":"https://temuulene.github.io/mongolstats/AGENT.html","id":"id_6-output-conventions","dir":"","previous_headings":"","what":"6) Output Conventions","title":"LLM System Instructions: R Epi-Analyst Persona (Version 3.0)","text":"Put library() calls front. Prefer explicit namespaces otherwise. Use |>; replace user’s existing pipe patch mode. Set seeds stochastic steps. Prefer relative paths (::()); avoid hard-coded local paths. tables/figures, include concise, publication-ready labels captions. Shiny, include brief run notes (run_app() entry point using golem). packages, include DESCRIPTION, NAMESPACE, tests, basic pkgdown setup asked.","code":""},{"path":"https://temuulene.github.io/mongolstats/AGENT.html","id":"id_7-privacy-security-and-governance","dir":"","previous_headings":"","what":"7) Privacy, Security, and Governance","title":"LLM System Instructions: R Epi-Analyst Persona (Version 3.0)","text":"print return direct identifiers small cells risk exists. Strip mask PHI examples. Follow site rules data access, storage, sharing.","code":""},{"path":"https://temuulene.github.io/mongolstats/CODE_OF_CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Code of Conduct","title":"Code of Conduct","text":"project follows Contributor Covenant Code Conduct. https://www.contributor-covenant.org/version/2/1/code_of_conduct/ Instances abusive, harassing, otherwise unacceptable behavior may reported maintainers temuulen@gmail.com.","code":""},{"path":"https://temuulene.github.io/mongolstats/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to mongolstats","title":"Contributing to mongolstats","text":"Thanks interest contributing! project welcomes issues, ideas, pull requests.","code":""},{"path":"https://temuulene.github.io/mongolstats/CONTRIBUTING.html","id":"setup","dir":"","previous_headings":"","what":"Setup","title":"Contributing to mongolstats","text":"Requires R (>= 4.1). Recommended: RStudio vignette building (bundles Pandoc). Install dependencies go; smoke/test scripts handle .","code":""},{"path":"https://temuulene.github.io/mongolstats/CONTRIBUTING.html","id":"development-workflow","dir":"","previous_headings":"","what":"Development workflow","title":"Contributing to mongolstats","text":"Rscript tools/smoke.R Rscript -e \"invisible(lapply(list.files('R', full.names=TRUE), source)); library(testthat); test_dir('tests/testthat', reporter='summary')\" Rscript tools/build_site.R","code":""},{"path":"https://temuulene.github.io/mongolstats/CONTRIBUTING.html","id":"pull-requests","dir":"","previous_headings":"","what":"Pull requests","title":"Contributing to mongolstats","text":"Keep changes focused tidyverse-styled. Add tests new behavior feasible. Update README vignettes user-facing behavior changes.","code":""},{"path":"https://temuulene.github.io/mongolstats/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to mongolstats","text":"participating, agree abide Code Conduct CODE_OF_CONDUCT.md.","code":""},{"path":"https://temuulene.github.io/mongolstats/articles/getting-started.html","id":"list-tables-and-search","dir":"Articles","previous_headings":"","what":"List tables and search","title":"Getting started with tidy1212","text":"","code":"itms <- nso_itms() itms %>% select(tbl_id, tbl_eng_nm, strt_prd, end_prd) %>% head()  nso_itms_search(\"population\") %>% select(tbl_id, tbl_eng_nm) %>% head()"},{"path":"https://temuulene.github.io/mongolstats/articles/getting-started.html","id":"fetch-data","dir":"Articles","previous_headings":"","what":"Fetch data","title":"Getting started with tidy1212","text":"","code":"dat <- nso_data(   tbl_id = \"DT_NSO_2600_004V1\",   period = c(\"201701\",\"201702\",\"201703\"),   code = c(\"1\",\"2\"),   code1 = \"101\",   labels = \"en\" )  dat %>% select(tbl_id, period, code, code_en, value) %>% head()"},{"path":"https://temuulene.github.io/mongolstats/articles/getting-started.html","id":"batch-fetch","dir":"Articles","previous_headings":"","what":"Batch fetch","title":"Getting started with tidy1212","text":"","code":"reqs <- tibble::tibble(   tbl_id = c(\"DT_NSO_0300_062V1\",\"DT_NSO_0300_004V5\"),   period = \"2016\",   code = c(\"12\",\"181\"),   code1 = c(\"101\",\"11\") ) nso_package(reqs, labels = \"en\") %>% select(tbl_id, period, value) %>% head()"},{"path":"https://temuulene.github.io/mongolstats/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Temuulen Enebish. Author, maintainer.","code":""},{"path":"https://temuulene.github.io/mongolstats/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Enebish T (2025). mongolstats: Mongolian NSO Open Data Boundaries (Tidy Client). R package version 0.0.0.9000, https://temuulene.github.io/mongolstats/.","code":"@Manual{,   title = {mongolstats: Mongolian NSO Open Data and Boundaries (Tidy Client)},   author = {Temuulen Enebish},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://temuulene.github.io/mongolstats/}, }"},{"path":"https://temuulene.github.io/mongolstats/index.html","id":"mongolstats","dir":"","previous_headings":"","what":"mongolstats","title":"mongolstats","text":"Tidy access National Statistics Office Mongolia Open Data API (opendata.1212.mn) Mongolia administrative boundaries.","code":""},{"path":"https://temuulene.github.io/mongolstats/index.html","id":"quick-start","dir":"","previous_headings":"","what":"Quick start","title":"mongolstats","text":"","code":"library(mongolstats) library(dplyr)  # List available tables itms <- nso_itms()  glimpse(itms)  # Inspect variables for a table vars <- nso_itms_detail(\"DT_NSO_2600_004V1\") vars %>% count(field)  # Fetch data for specific periods and codes dat <- nso_data(   tbl_id = \"DT_NSO_2600_004V1\",   period = c(\"201701\",\"201702\",\"201703\"),   code = c(\"1\",\"2\"),   code1 = \"101\",   labels = \"en\" )  ## Install # devtools::install_github(\"temuulene/mongolstats\")  # Batch fetch multiple tables reqs <- tibble::tibble(   tbl_id = c(\"DT_NSO_0300_062V1\",\"DT_NSO_0300_004V5\"),   period = \"2016\",   code = c(\"12\",\"181\"),   code1 = c(\"101\",\"11\") )  pkg <- nso_package(reqs)  # Get administrative boundaries (ADM1 = aimag) adm1 <- mn_boundaries(\"ADM1\")  # Enable caching to speed up table/codebook lookups nso_cache_enable()"},{"path":"https://temuulene.github.io/mongolstats/index.html","id":"mongolstats-1","dir":"","previous_headings":"","what":"mongolstats","title":"mongolstats","text":"Tidy access National Statistics Office Mongolia (NSO) Open Data API (opendata.1212.mn) Mongolia administrative boundaries, inspired ergonomics tidycensus. mongolstats provides tidyverse-friendly interface discovering tables, exploring codebooks, fetching data, working simple features (sf) geometries mapping.","code":""},{"path":"https://temuulene.github.io/mongolstats/index.html","id":"features","dir":"","previous_headings":"","what":"Features","title":"mongolstats","text":"Tidy HTTP client NSO Open Data API (v2) Discover tables variables nso_itms() nso_itms_detail() Fetch data via nso_data() batch requests nso_package() Optional label columns English Mongolian (labels = \"en\" | \"mn\" | \"\") Sector discovery table search helpers Mongolia administrative boundaries (ADM0â€“ADM2) sf Name-normalized fuzzy boundary joins quick mapping Lightweight -disk caching faster table/codebook lookups","code":""},{"path":"https://temuulene.github.io/mongolstats/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"mongolstats","text":"","code":"# install.packages(\"devtools\") devtools::install_github(\"temuulene/mongolstats\")"},{"path":"https://temuulene.github.io/mongolstats/index.html","id":"quick-start-1","dir":"","previous_headings":"","what":"Quick Start","title":"mongolstats","text":"","code":"library(mongolstats) library(dplyr)  # Enable caching to speed up repeated discovery calls nso_cache_enable()  # 1) List available tables itms <- nso_itms() itms %>% select(tbl_id, tbl_eng_nm, strt_prd, end_prd) %>% slice_head(n = 5)  # 2) Inspect variables (codebook) for a table vars <- nso_itms_detail(\"DT_NSO_2600_004V1\") vars %>% count(field)  # 3) Fetch data with labels dat <- nso_data(   tbl_id = \"DT_NSO_2600_004V1\",   period = c(\"201701\",\"201702\",\"201703\"),   code   = c(\"1\",\"2\"),   code1  = \"101\",   labels = \"en\" )  dat %>% select(tbl_id, period, code, code_en, code1_en, value) %>% slice_head(n = 6)  # 4) Batch fetch multiple tables reqs <- tibble::tibble(   tbl_id = c(\"DT_NSO_0300_062V1\", \"DT_NSO_0300_004V5\"),   period = \"2016\",   code   = c(\"12\", \"181\"),   code1  = c(\"101\", \"11\") )  pkg <- nso_package(reqs, labels = \"en\") pkg %>% select(tbl_id, period, value) %>% slice_head(n = 6)  # 5) Get boundaries and join by name adm1 <- mn_boundaries(\"ADM1\") joined <- mn_join_by_name(dat, name_col = \"code1_en\", level = \"ADM1\", boundaries = adm1)  # 6) Fuzzy join by name (e.g., if names differ slightly) joined_fuzzy <- mn_fuzzy_join_by_name(dat, name_col = \"code1_en\", level = \"ADM1\", max_distance = 2)"},{"path":"https://temuulene.github.io/mongolstats/index.html","id":"core-functions","dir":"","previous_headings":"","what":"Core Functions","title":"mongolstats","text":"nso_itms() â€” list tables nso_itms_detail(tbl_id) â€” codebook variables (CODE, CODE1, CODE2) nso_sectors(), nso_subsectors(subid) â€” sector hierarchy nso_search(query, sector) â€” keyword search across table names nso_data(tbl_id, period, code, code1, code2, labels) â€” fetch one table nso_package(requests, labels) â€” batch fetch many tables labels can “none” (default), “en”, “mn”, “” mn_boundaries(level) â€” ADM0/ADM1/ADM2 sf GeoBoundaries mn_boundaries_normalize(g) â€” adds name_std joining mn_join_by_name(data, name_col, level, boundaries) â€” exact join mn_fuzzy_join_by_name(data, name_col, level, max_distance) â€” fuzzy join mn_boundary_keys(level) â€” quick crosswalk boundary IDs/names nso_cache_enable(), nso_cache_disable(), nso_cache_clear() nso_period_seq(start, end, ) â€” build period codes (YYYY YYYYMM) nso_table_periods(tbl_id) â€” derive valid periods table metadata","code":""},{"path":"https://temuulene.github.io/mongolstats/index.html","id":"working-with-periods","dir":"","previous_headings":"","what":"Working with Periods","title":"mongolstats","text":"","code":"# Monthly sequence nso_period_seq(\"201801\", \"201812\", by = \"M\")  # Yearly sequence nso_period_seq(\"2018\", \"2022\", by = \"Y\")  # Valid periods for a table nso_table_periods(\"DT_NSO_0500_007V1\")"},{"path":"https://temuulene.github.io/mongolstats/index.html","id":"mapping-essentials","dir":"","previous_headings":"","what":"Mapping Essentials","title":"mongolstats","text":"","code":"library(sf) adm1 <- mn_boundaries(\"ADM1\") plot(sf::st_geometry(adm1))  # Join indicators to geometries by name ind <- nso_data(\"DT_NSO_0500_007V1\", period = tail(nso_table_periods(\"DT_NSO_0500_007V1\"), 1), labels = \"en\") j  <- mn_join_by_name(ind, name_col = \"scr_eng1\", level = \"ADM1\") plot(j[\"value\"])"},{"path":"https://temuulene.github.io/mongolstats/index.html","id":"vignettes","dir":"","previous_headings":"","what":"Vignettes","title":"mongolstats","text":"Getting started: vignettes/getting-started.Rmd Mapping sf: vignettes/mapping.Rmd Fuzzy joins: vignettes/fuzzy-joins.Rmd Code-based joins (new): vignettes/code-joins.Rmd","code":""},{"path":"https://temuulene.github.io/mongolstats/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"mongolstats","text":"Issues pull requests welcome : - https://github.com/temuulene/mongolstats/issues","code":""},{"path":[]},{"path":"https://temuulene.github.io/mongolstats/reference/mn_boundaries.html","id":null,"dir":"Reference","previous_headings":"","what":"Mongolia administrative boundaries (sf) — mn_boundaries","title":"Mongolia administrative boundaries (sf) — mn_boundaries","text":"Downloads Mongolia boundaries ADM0/ADM1/ADM2 GeoBoundaries API returns sf object. Results can cached caller needed.","code":""},{"path":"https://temuulene.github.io/mongolstats/reference/mn_boundaries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mongolia administrative boundaries (sf) — mn_boundaries","text":"","code":"mn_boundaries(level = c(\"ADM0\", \"ADM1\", \"ADM2\"))"},{"path":"https://temuulene.github.io/mongolstats/reference/mn_boundaries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mongolia administrative boundaries (sf) — mn_boundaries","text":"level One \"ADM0\", \"ADM1\", \"ADM2\".","code":""},{"path":"https://temuulene.github.io/mongolstats/reference/mn_boundaries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mongolia administrative boundaries (sf) — mn_boundaries","text":"sf object polygons requested level.","code":""},{"path":"https://temuulene.github.io/mongolstats/reference/mn_boundaries_normalize.html","id":null,"dir":"Reference","previous_headings":"","what":"Add normalized name columns to boundaries — mn_boundaries_normalize","title":"Add normalized name columns to boundaries — mn_boundaries_normalize","text":"Add normalized name columns boundaries","code":""},{"path":"https://temuulene.github.io/mongolstats/reference/mn_boundaries_normalize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add normalized name columns to boundaries — mn_boundaries_normalize","text":"","code":"mn_boundaries_normalize(g, name_col = \"shapeName\")"},{"path":"https://temuulene.github.io/mongolstats/reference/mn_boundaries_normalize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add normalized name columns to boundaries — mn_boundaries_normalize","text":"g sf object mn_boundaries() name_col Column English names (default 'shapeName').","code":""},{"path":"https://temuulene.github.io/mongolstats/reference/mn_boundaries_normalize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add normalized name columns to boundaries — mn_boundaries_normalize","text":"sf name_std column added.","code":""},{"path":"https://temuulene.github.io/mongolstats/reference/mn_boundary_keys.html","id":null,"dir":"Reference","previous_headings":"","what":"Boundary keys/crosswalk helper — mn_boundary_keys","title":"Boundary keys/crosswalk helper — mn_boundary_keys","text":"Boundary keys/crosswalk helper","code":""},{"path":"https://temuulene.github.io/mongolstats/reference/mn_boundary_keys.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Boundary keys/crosswalk helper — mn_boundary_keys","text":"","code":"mn_boundary_keys(level = \"ADM1\")"},{"path":"https://temuulene.github.io/mongolstats/reference/mn_boundary_keys.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Boundary keys/crosswalk helper — mn_boundary_keys","text":"level Boundary level.","code":""},{"path":"https://temuulene.github.io/mongolstats/reference/mn_boundary_keys.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Boundary keys/crosswalk helper — mn_boundary_keys","text":"tibble key columns GeoBoundaries normalized names.","code":""},{"path":"https://temuulene.github.io/mongolstats/reference/mn_fuzzy_join_by_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Fuzzy join data to boundaries by name — mn_fuzzy_join_by_name","title":"Fuzzy join data to boundaries by name — mn_fuzzy_join_by_name","text":"Fuzzy join data boundaries name","code":""},{"path":"https://temuulene.github.io/mongolstats/reference/mn_fuzzy_join_by_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fuzzy join data to boundaries by name — mn_fuzzy_join_by_name","text":"","code":"mn_fuzzy_join_by_name(   data,   name_col,   level = \"ADM1\",   boundaries = NULL,   max_distance = 2,   method = c(\"osa\", \"lv\", \"jw\", \"dl\") )"},{"path":"https://temuulene.github.io/mongolstats/reference/mn_fuzzy_join_by_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fuzzy join data to boundaries by name — mn_fuzzy_join_by_name","text":"data Data frame name column. name_col Column data containing names. level Boundary level. boundaries Optional pre-fetched boundaries. max_distance Maximum string distance match (default 2). method Distance method passed stringdist::stringdist.","code":""},{"path":"https://temuulene.github.io/mongolstats/reference/mn_fuzzy_join_by_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fuzzy join data to boundaries by name — mn_fuzzy_join_by_name","text":"sf best fuzzy matches joined.","code":""},{"path":"https://temuulene.github.io/mongolstats/reference/mn_join_by_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Join data to boundaries by (normalized) names — mn_join_by_name","title":"Join data to boundaries by (normalized) names — mn_join_by_name","text":"Join data boundaries (normalized) names","code":""},{"path":"https://temuulene.github.io/mongolstats/reference/mn_join_by_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Join data to boundaries by (normalized) names — mn_join_by_name","text":"","code":"mn_join_by_name(data, name_col, level = \"ADM1\", boundaries = NULL)"},{"path":"https://temuulene.github.io/mongolstats/reference/mn_join_by_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Join data to boundaries by (normalized) names — mn_join_by_name","text":"data Data frame name column. name_col Column data contains names join . level Boundary level, passed mn_boundaries() boundaries provided. boundaries Optional pre-fetched boundaries.","code":""},{"path":"https://temuulene.github.io/mongolstats/reference/mn_join_by_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Join data to boundaries by (normalized) names — mn_join_by_name","text":"sf joined data.","code":""},{"path":"https://temuulene.github.io/mongolstats/reference/nso_cache_clear.html","id":null,"dir":"Reference","previous_headings":"","what":"Clear cached entries — nso_cache_clear","title":"Clear cached entries — nso_cache_clear","text":"Clear cached entries","code":""},{"path":"https://temuulene.github.io/mongolstats/reference/nso_cache_clear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clear cached entries — nso_cache_clear","text":"","code":"nso_cache_clear()"},{"path":"https://temuulene.github.io/mongolstats/reference/nso_cache_disable.html","id":null,"dir":"Reference","previous_headings":"","what":"Disable caching — nso_cache_disable","title":"Disable caching — nso_cache_disable","text":"Disable caching","code":""},{"path":"https://temuulene.github.io/mongolstats/reference/nso_cache_disable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Disable caching — nso_cache_disable","text":"","code":"nso_cache_disable()"},{"path":"https://temuulene.github.io/mongolstats/reference/nso_cache_enable.html","id":null,"dir":"Reference","previous_headings":"","what":"Enable or configure caching — nso_cache_enable","title":"Enable or configure caching — nso_cache_enable","text":"Caches table lists codebooks disk speed repeated calls.","code":""},{"path":"https://temuulene.github.io/mongolstats/reference/nso_cache_enable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enable or configure caching — nso_cache_enable","text":"","code":"nso_cache_enable(dir = NULL)"},{"path":"https://temuulene.github.io/mongolstats/reference/nso_cache_enable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Enable or configure caching — nso_cache_enable","text":"dir Directory cache; defaults user cache dir.","code":""},{"path":"https://temuulene.github.io/mongolstats/reference/nso_cache_enable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Enable or configure caching — nso_cache_enable","text":"Cache directory path.","code":""},{"path":"https://temuulene.github.io/mongolstats/reference/nso_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch statistical data for a table — nso_data","title":"Fetch statistical data for a table — nso_data","text":"Wrapper around POST api/Data returns tidy results tibble.","code":""},{"path":"https://temuulene.github.io/mongolstats/reference/nso_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch statistical data for a table — nso_data","text":"","code":"nso_data(   tbl_id,   period = NULL,   code = NULL,   code1 = NULL,   code2 = NULL,   labels = c(\"none\", \"en\", \"mn\", \"both\") )"},{"path":"https://temuulene.github.io/mongolstats/reference/nso_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch statistical data for a table — nso_data","text":"tbl_id Table identifier (e.g., \"DT_NSO_2600_004V1\"). period Character vector periods (e.g., \"201701\", \"2016\"). Optional. code, code1, code2 Optional character vectors classification codes. labels handle code labels: \"none\" (default, labels), \"en\" (English labels ), \"mn\" (Mongolian labels ), \"\" (English Mongolian labels).","code":""},{"path":"https://temuulene.github.io/mongolstats/reference/nso_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetch statistical data for a table — nso_data","text":"tibble columns including tbl_id, period, code*, scr_* labels, numeric value.","code":""},{"path":"https://temuulene.github.io/mongolstats/reference/nso_itms.html","id":null,"dir":"Reference","previous_headings":"","what":"List available NSO tables — nso_itms","title":"List available NSO tables — nso_itms","text":"List available NSO tables","code":""},{"path":"https://temuulene.github.io/mongolstats/reference/nso_itms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List available NSO tables — nso_itms","text":"","code":"nso_itms()"},{"path":"https://temuulene.github.io/mongolstats/reference/nso_itms_by_sector.html","id":null,"dir":"Reference","previous_headings":"","what":"List tables under a sector or sub-sector — nso_itms_by_sector","title":"List tables under a sector or sub-sector — nso_itms_by_sector","text":"List tables sector sub-sector","code":""},{"path":"https://temuulene.github.io/mongolstats/reference/nso_itms_by_sector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List tables under a sector or sub-sector — nso_itms_by_sector","text":"","code":"nso_itms_by_sector(list_id)"},{"path":"https://temuulene.github.io/mongolstats/reference/nso_itms_by_sector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List tables under a sector or sub-sector — nso_itms_by_sector","text":"list_id list_id nso_sectors() nso_subsectors().","code":""},{"path":"https://temuulene.github.io/mongolstats/reference/nso_itms_by_sector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List tables under a sector or sub-sector — nso_itms_by_sector","text":"tibble tables sector.","code":""},{"path":"https://temuulene.github.io/mongolstats/reference/nso_itms_detail.html","id":null,"dir":"Reference","previous_headings":"","what":"Get variable codes for a table — nso_itms_detail","title":"Get variable codes for a table — nso_itms_detail","text":"Get variable codes table","code":""},{"path":"https://temuulene.github.io/mongolstats/reference/nso_itms_detail.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get variable codes for a table — nso_itms_detail","text":"","code":"nso_itms_detail(tbl_id)"},{"path":"https://temuulene.github.io/mongolstats/reference/nso_itms_detail.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get variable codes for a table — nso_itms_detail","text":"tbl_id Table identifier (e.g., \"DT_NSO_2600_004V1\").","code":""},{"path":"https://temuulene.github.io/mongolstats/reference/nso_itms_detail.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get variable codes for a table — nso_itms_detail","text":"tibble columns field, itm_id, up_itm_id, scr_mn, scr_eng.","code":""},{"path":"https://temuulene.github.io/mongolstats/reference/nso_itms_search.html","id":null,"dir":"Reference","previous_headings":"","what":"Search tables by keyword — nso_itms_search","title":"Search tables by keyword — nso_itms_search","text":"Search tables keyword","code":""},{"path":"https://temuulene.github.io/mongolstats/reference/nso_itms_search.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search tables by keyword — nso_itms_search","text":"","code":"nso_itms_search(query, fields = c(\"tbl_eng_nm\", \"tbl_nm\"))"},{"path":"https://temuulene.github.io/mongolstats/reference/nso_itms_search.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search tables by keyword — nso_itms_search","text":"query Search string (case-insensitive). fields Character vector fields search within.","code":""},{"path":"https://temuulene.github.io/mongolstats/reference/nso_itms_search.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search tables by keyword — nso_itms_search","text":"tibble filtered matching tables.","code":""},{"path":"https://temuulene.github.io/mongolstats/reference/nso_package.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch multiple tables in one request — nso_package","title":"Fetch multiple tables in one request — nso_package","text":"Wrapper around POST api/Package accepts data frame list requests returns bound tibble results.","code":""},{"path":"https://temuulene.github.io/mongolstats/reference/nso_package.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch multiple tables in one request — nso_package","text":"","code":"nso_package(requests, labels = c(\"none\", \"en\", \"mn\", \"both\"))"},{"path":"https://temuulene.github.io/mongolstats/reference/nso_package.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch multiple tables in one request — nso_package","text":"requests data frame columns tbl_id, optional period, code, code1, code2; list records. labels handle code labels: \"none\" (default, labels), \"en\" (English labels ), \"mn\" (Mongolian labels ), \"\" (English Mongolian labels).","code":""},{"path":"https://temuulene.github.io/mongolstats/reference/nso_package.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetch multiple tables in one request — nso_package","text":"tibble combined results added tbl_id column.","code":""},{"path":"https://temuulene.github.io/mongolstats/reference/nso_period_seq.html","id":null,"dir":"Reference","previous_headings":"","what":"Create period codes — nso_period_seq","title":"Create period codes — nso_period_seq","text":"Utilities construct NSO period codes sequences. monthly data, use YYYYMM; yearly, use YYYY.","code":""},{"path":"https://temuulene.github.io/mongolstats/reference/nso_period_seq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create period codes — nso_period_seq","text":"","code":"nso_period_seq(start, end, by = c(\"Y\", \"M\"))"},{"path":"https://temuulene.github.io/mongolstats/reference/nso_period_seq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create period codes — nso_period_seq","text":"start, end Start end periods character (YYYY YYYYMM). 'Y' yearly 'M' monthly.","code":""},{"path":"https://temuulene.github.io/mongolstats/reference/nso_period_seq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create period codes — nso_period_seq","text":"Character vector period codes.","code":""},{"path":"https://temuulene.github.io/mongolstats/reference/nso_search.html","id":null,"dir":"Reference","previous_headings":"","what":"Search NSO tables — nso_search","title":"Search NSO tables — nso_search","text":"Search NSO tables","code":""},{"path":"https://temuulene.github.io/mongolstats/reference/nso_search.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search NSO tables — nso_search","text":"","code":"nso_search(query, sector = NULL, fields = c(\"tbl_eng_nm\", \"tbl_nm\"))"},{"path":"https://temuulene.github.io/mongolstats/reference/nso_search.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search NSO tables — nso_search","text":"query Search string (regex, case-insensitive). sector Optional sector/subsector list_id filter results. fields Character vector fields search within.","code":""},{"path":"https://temuulene.github.io/mongolstats/reference/nso_search.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search NSO tables — nso_search","text":"Tibble matching tables.","code":""},{"path":"https://temuulene.github.io/mongolstats/reference/nso_sectors.html","id":null,"dir":"Reference","previous_headings":"","what":"List top-level sectors — nso_sectors","title":"List top-level sectors — nso_sectors","text":"List top-level sectors","code":""},{"path":"https://temuulene.github.io/mongolstats/reference/nso_sectors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List top-level sectors — nso_sectors","text":"","code":"nso_sectors()"},{"path":"https://temuulene.github.io/mongolstats/reference/nso_sectors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List top-level sectors — nso_sectors","text":"tibble sector list_id, names flags.","code":""},{"path":"https://temuulene.github.io/mongolstats/reference/nso_subsectors.html","id":null,"dir":"Reference","previous_headings":"","what":"List sub-sectors for a sector — nso_subsectors","title":"List sub-sectors for a sector — nso_subsectors","text":"List sub-sectors sector","code":""},{"path":"https://temuulene.github.io/mongolstats/reference/nso_subsectors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List sub-sectors for a sector — nso_subsectors","text":"","code":"nso_subsectors(subid)"},{"path":"https://temuulene.github.io/mongolstats/reference/nso_subsectors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List sub-sectors for a sector — nso_subsectors","text":"subid Sector identifier nso_sectors() list_id.","code":""},{"path":"https://temuulene.github.io/mongolstats/reference/nso_subsectors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List sub-sectors for a sector — nso_subsectors","text":"tibble sub-sectors.","code":""},{"path":"https://temuulene.github.io/mongolstats/reference/nso_table_periods.html","id":null,"dir":"Reference","previous_headings":"","what":"Get valid periods for a table — nso_table_periods","title":"Get valid periods for a table — nso_table_periods","text":"Uses nso_itms() metadata compute valid period codes given table.","code":""},{"path":"https://temuulene.github.io/mongolstats/reference/nso_table_periods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get valid periods for a table — nso_table_periods","text":"","code":"nso_table_periods(tbl_id)"},{"path":"https://temuulene.github.io/mongolstats/reference/nso_table_periods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get valid periods for a table — nso_table_periods","text":"tbl_id Table identifier.","code":""},{"path":"https://temuulene.github.io/mongolstats/reference/nso_table_periods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get valid periods for a table — nso_table_periods","text":"Character vector period codes.","code":""},{"path":"https://temuulene.github.io/mongolstats/news/index.html","id":"mongolstats-development-version","dir":"Changelog","previous_headings":"","what":"mongolstats (development version)","title":"mongolstats (development version)","text":"Initial development release. NSO API wrappers: nso_itms(), nso_itms_detail(), nso_data(), nso_package() Sector helpers: nso_sectors(), nso_subsectors(), nso_search() Boundaries: mn_boundaries(), join helpers incl. fuzzy joins Caching discovery endpoints Vignettes getting started, mapping, fuzzy joins, code-based joins","code":""}]
